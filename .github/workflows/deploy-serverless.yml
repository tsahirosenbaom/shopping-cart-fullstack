name: Deploy Serverless Shopping Cart

on:
  push:
    branches: [main]
    paths:
      - "backend/serverless/**"
      - "frontend/**"
      - ".github/workflows/deploy-serverless.yml"
  pull_request:
    branches: [main]

env:
  AWS_REGION: us-east-1
  NODE_VERSION: "18"
  STACK_NAME: serverless-shopping-cart

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Test React Frontend
        run: |
          if [ -f "frontend/package.json" ]; then
            cd frontend
            npm ci
            npm run test -- --coverage --watchAll=false || echo "No tests or tests failed"
          fi

      - name: Test Lambda Functions
        run: |
          if [ -d "backend/serverless/src" ]; then
            cd backend/serverless
            for func in src/*/; do
              if [ -f "$func/package.json" ]; then
                cd "$func" && npm ci && npm test 2>/dev/null || echo "No tests for $func"
                cd ../..
              fi
            done
          fi

  deploy-serverless:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      api-url: ${{ steps.deploy.outputs.api-url }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup AWS SAM
        uses: aws-actions/setup-sam@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build and Deploy
        id: deploy
        run: |
          cd backend/serverless
          sam build
          BUCKET_NAME="$STACK_NAME-$(date +%s)"
          aws s3 mb s3://$BUCKET_NAME
          sam deploy --stack-name $STACK_NAME --s3-bucket $BUCKET_NAME --capabilities CAPABILITY_IAM --no-confirm-changeset
          API_URL=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].Outputs[?OutputKey==`ShoppingCartApi`].OutputValue' --output text)
          echo "api-url=$API_URL" >> $GITHUB_OUTPUT

  deploy-frontend:
    needs: deploy-serverless
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy React App
        env:
          REACT_APP_API_BASE_URL: ${{ needs.deploy-serverless.outputs.api-url }}
        run: |
          cd frontend
          npm ci && npm run build
          BUCKET_NAME="$STACK_NAME-frontend-$(date +%s)"

          aws s3 mb s3://$BUCKET_NAME --region $AWS_REGION

          # Enable public access to the bucket
          aws s3api put-public-access-block \
            --bucket $BUCKET_NAME \
            --public-access-block-configuration \
            BlockPublicAcls=false,IgnorePublicAcls=false,BlockPublicPolicy=false,RestrictPublicBuckets=false
          # Configure as website
          aws s3 website s3://$BUCKET_NAME --index-document index.html
          # Set public-read policy
          aws s3api put-bucket-policy --bucket $BUCKET_NAME --policy '{
            "Version":"2012-10-17",
            "Statement":[{
              "Effect":"Allow",
              "Principal":"*",
              "Action":"s3:GetObject",
              "Resource":"arn:aws:s3:::'$BUCKET_NAME'/*"
            }]
          }'
          # Upload build
          aws s3 sync build/ s3://$BUCKET_NAME --delete
          echo "Frontend: http://$BUCKET_NAME.s3-website-${AWS_REGION}.amazonaws.com"
